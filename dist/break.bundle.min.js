!function e(t,n,r){function a(o,u){if(!n[o]){if(!t[o]){var f="function"==typeof require&&require;if(!u&&f)return f(o,!0);if(i)return i(o,!0);var c=new Error("Cannot find module '"+o+"'");throw c.code="MODULE_NOT_FOUND",c}var d=n[o]={exports:{}};t[o][0].call(d.exports,function(e){var n=t[o][1][e];return a(n?n:e)},d,d.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)a(r[o]);return a}({1:[function(e,t,n){!function(e){if(!Array.prototype.find){var t=function(e){var t=Object(this),n=t.length<0?0:t.length>>>0;if(0===n)return void 0;if("function"!=typeof e||"[object Function]"!==Object.prototype.toString.call(e))throw new TypeError("Array#find: predicate must be a function");for(var r,a=arguments[1],i=0;n>i;i++)if(r=t[i],e.call(a,r,i,t))return r;return void 0};if(Object.defineProperty)try{Object.defineProperty(Array.prototype,"find",{value:t,configurable:!0,enumerable:!1,writable:!0})}catch(n){}Array.prototype.find||(Array.prototype.find=t)}}(this)},{}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e("array.prototype.find");var r={between:function(e,t){return window.matchMedia("(min-width: "+e+"px) and\n                              (max-width: "+(t-1)+"px)")},atLeast:function(e){return window.matchMedia("(min-width: "+e+"px)")},atMost:function(e){return window.matchMedia("(max-width: "+(e-1)+"px)")}},a=function(e,t){return{is:"number"==typeof t?r.between(e,t):r.atLeast(e),atLeast:r.atLeast(e),atMost:r.atMost(t||9999)}},i=function(e){function t(e){var t=o.find(function(t){return t.name===e});if(!t)throw new Error("invalid breakpoint name");return t}var n=[],r=function(t){var r={name:t,value:e[t]};if(n.find(function(e){return e.value===r.value}))throw new Error("Breakpoint values must be unique.");n.push(r)};for(var i in e)r(i);var o=n.sort(function(e,t){return e.value>t.value}).map(function(e,t){if("string"!=typeof e.name)throw new Error("Invalid breakpoint name -- should be a string.");if("number"!=typeof e.value||e.value<0||e.value>=9999)throw new Error("Invalid breakpoint value for "+e.name+": "+e.value);var r={name:e.name};return 1===n.length?r.query=a(0,null):t===n.length-1?r.query=a(e.value,null):r.query=a(e.value,n[t+1].value),r});return{breakpoints:n,is:function(e){return t(e).query.is.matches},atLeast:function(e){return t(e).query.atLeast.matches},atMost:function(e){return t(e).query.atMost.matches},current:function(){return o.find(function(e){return e.query.is.matches})},addEventListener:function(e){o.forEach(function(t){t.query.is.addListener(function(){e(t.name)}),t.query.atLeast.addListener(function(){e(t.name)}),t.query.atMost.addListener(function(){e(t.name)})})}}};"undefined"!=typeof window&&(window.Breakjs=i),n["default"]=i,t.exports=n["default"]},{"array.prototype.find":1}]},{},[2]);